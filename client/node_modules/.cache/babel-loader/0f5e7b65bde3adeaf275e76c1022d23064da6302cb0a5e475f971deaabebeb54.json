{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\CS projects\\\\wix-enter-exam\\\\client\\\\src\\\\pages\\\\AddNewPost.js\",\n  _s = $RefreshSig$();\nimport { Card, CardContent, CardActions, Typography, FormControl, InputLabel, OutlinedInput, MenuItem, TextField, Button, Select } from '@mui/material';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport addPost from '../App.js';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewPost(_ref) {\n  _s();\n  let {\n    handleAddPost\n  } = _ref;\n  const tagsList = ['Server', 'Frontend', 'Security', 'Analytics', 'Mobile']; // mock tags data\n\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedTag, setSelectedTag] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      component: \"form\",\n      className: \"form\",\n      \"data-testid\": \"addNewPost-card\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"formFields\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          className: \"formTitle\",\n          \"data-testid\": \"addNewPost-title\",\n          children: \"Add A New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"caption\",\n          component: \"div\",\n          \"data-testid\": \"addNewPost-required\",\n          children: \"*Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            minWidth: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            required: true,\n            htmlFor: \"title-field\",\n            \"data-testid\": \"addNewPost-postTitleLabel\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            error: false,\n            id: \"addNewPost-postTitleInput\",\n            label: \"Title\",\n            fullWidth: true,\n            value: title,\n            onChange: event => {\n              setTitle(event.target.value);\n            },\n            \"data-testid\": \"addNewPost-postTitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"addNewPost-postContentInput\",\n          label: \"Content\",\n          multiline: true,\n          rows: 4,\n          fullWidth: true,\n          required: true,\n          error: false,\n          value: content,\n          onChange: event => {\n            setContent(event.target.value);\n          },\n          \"data-testid\": \"addNewPost-postContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            minWidth: 'max-content',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"select-tag-label\",\n            \"data-testid\": \"addNewPost-postTagLabel\",\n            children: \"Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"select-tag-label\",\n            id: \"addNewPost-postTagSelect\",\n            value: selectedTag,\n            label: \"Tag\",\n            onChange: event => {\n              setSelectedTag(event.target.value);\n            },\n            \"data-testid\": \"addNewPost-postTag\",\n            children: tagsList.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              \"data-testid\": `addNewPost-postTagOption-${option}`,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button\n        // onClick={() => {\n        //   // check if the title and content are not empty\n        //     if (title !== '' && content !== '') {\n        //       addPost(uuidv4(), title, content);\n        //       // setTitle('');\n        //       // setContent('');\n        //       // setSelectedTag('');\n        //       // navigate('/');\n        //     }\n        //     else{\n        //       // alert the user that the title and content are required\n        //       alert('Title and content are required');\n        //     }\n        //   }\n        // }\n        , {\n          onClick: () => App.addPost(title, content, selectedTag),\n          variant: \"contained\",\n          size: \"large\",\n          \"data-testid\": \"addNewPost-submitBtn\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewPost, \"OgV3et6vGE/uTjSu862K00uU+aw=\", false, function () {\n  return [useNavigate];\n});\n_c = AddNewPost;\nexport default AddNewPost;\nvar _c;\n$RefreshReg$(_c, \"AddNewPost\");","map":{"version":3,"names":["Card","CardContent","CardActions","Typography","FormControl","InputLabel","OutlinedInput","MenuItem","TextField","Button","Select","useState","useNavigate","addPost","v4","uuidv4","jsxDEV","_jsxDEV","AddNewPost","_ref","_s","handleAddPost","tagsList","navigate","title","setTitle","content","setContent","selectedTag","setSelectedTag","className","children","component","variant","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","sx","minWidth","required","htmlFor","error","id","label","fullWidth","value","onChange","event","target","multiline","rows","m","width","labelId","map","option","onClick","App","size","_c","$RefreshReg$"],"sources":["D:/Documents/CS projects/wix-enter-exam/client/src/pages/AddNewPost.js"],"sourcesContent":["import {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  MenuItem,\n  TextField,\n  Button,\n  Select,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport addPost from '../App.js'\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AddNewPost({ handleAddPost }) {\n  const tagsList = ['Server', 'Frontend', 'Security', 'Analytics', 'Mobile']; // mock tags data\n\n  const navigate = useNavigate();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedTag, setSelectedTag] = useState('');\n\n  return (\n    <div className='container'>\n      <Card component='form' className='form' data-testid='addNewPost-card'>\n        <CardContent className='formFields'>\n          <Typography\n            variant='h5'\n            component='div'\n            className='formTitle'\n            data-testid='addNewPost-title'\n          >\n            Add A New Post\n          </Typography>\n          <Typography\n            gutterBottom\n            variant='caption'\n            component='div'\n            data-testid='addNewPost-required'\n          >\n            *Required\n          </Typography>\n          <FormControl sx={{ minWidth: '100%' }}>\n            <InputLabel\n              required\n              htmlFor='title-field'\n              data-testid='addNewPost-postTitleLabel'\n            >\n              Title\n            </InputLabel>\n            <OutlinedInput\n              error={false}\n              id='addNewPost-postTitleInput'\n              label='Title'\n              fullWidth\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n              }}\n              data-testid='addNewPost-postTitle'\n            />\n          </FormControl>\n          <TextField\n            id='addNewPost-postContentInput'\n            label='Content'\n            multiline\n            rows={4}\n            fullWidth\n            required\n            error={false}\n            value={content}\n            onChange={(event) => {\n              setContent(event.target.value);\n            }}\n            data-testid='addNewPost-postContent'\n          />\n          <FormControl sx={{ m: 1, minWidth: 'max-content', width: '200px' }}>\n            <InputLabel\n              id='select-tag-label'\n              data-testid='addNewPost-postTagLabel'\n            >\n              Tag\n            </InputLabel>\n            <Select\n              labelId='select-tag-label'\n              id='addNewPost-postTagSelect'\n              value={selectedTag}\n              label='Tag'\n              onChange={(event) => {\n                setSelectedTag(event.target.value);\n              }}\n              data-testid='addNewPost-postTag'\n            >\n              {tagsList.map((option) => (\n                <MenuItem\n                  key={option}\n                  value={option}\n                  data-testid={`addNewPost-postTagOption-${option}`}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </CardContent>\n        <CardActions>\n          <Button\n            // onClick={() => {\n            //   // check if the title and content are not empty\n            //     if (title !== '' && content !== '') {\n            //       addPost(uuidv4(), title, content);\n            //       // setTitle('');\n            //       // setContent('');\n            //       // setSelectedTag('');\n            //       // navigate('/');\n            //     }\n            //     else{\n            //       // alert the user that the title and content are required\n            //       alert('Title and content are required');\n            //     }\n            //   }\n            // }\n            onClick={() => App.addPost(title, content, selectedTag)}\n            variant='contained'\n            size='large'\n            data-testid='addNewPost-submitBtn'\n          >\n            submit\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nexport default AddNewPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}