{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\CS projects\\\\wix-enter-exam\\\\client\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport { ListItem, ListItemButton, IconButton, Card, CardContent, CardActions, Typography } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport ClappingIcon from './assets/ClappingIcon';\nimport AddTagButton from './AddTagButton';\nimport Tag from './Tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(_ref) {\n  _s();\n  let {\n    postId,\n    postTitle,\n    postContent,\n    Tags,\n    Posts,\n    getPostClaps,\n    addPostToTagList,\n    handleAddTagClick,\n    handleTagClick,\n    handleClapClick,\n    handleUserClapClick,\n    selectedTagId,\n    userId\n  } = _ref;\n  const getTagsByPostId = postID => {\n    const tagsArr = [];\n    for (const tagName in Tags) {\n      if (Tags[tagName][postID]) {\n        tagsArr.push(tagName);\n      }\n    }\n    return tagsArr;\n  };\n  const tagsNameArr = getTagsByPostId(postId);\n  const isTag = tagsNameArr.length > 0 ? true : false;\n  let didUserClappedOnPost = false;\n  const [clapsNum, setClapsNum] = useState(0);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    alignItems: \"flex-start\",\n    className: \"post\",\n    \"data-testid\": `post-${postId}`,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        disableGutters: true,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            \"data-testid\": `postTitle-${postId}`,\n            children: postTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            gutterBottom: true,\n            \"data-testid\": `postContent-${postId}`,\n            children: postContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(AddTagButton, {\n          dataTestId: `postAddTagBtn-${postId}`,\n          onClick: e => {\n            handleAddTagClick(e, postId);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), isTag && tagsNameArr.map(tagName => /*#__PURE__*/_jsxDEV(Tag, {\n          tagName: tagName,\n          postId: postId,\n          handleTagClick: handleTagClick,\n          addPostToTagList: addPostToTagList,\n          selectedTagId: selectedTagId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"clapping\",\n          size: \"small\",\n          \"data-testid\": `postClapsBtn-${postId}`,\n          onClick: () => {\n            handleUserClapClick(userId, postId);\n            handleClapClick(postId, userId);\n            setClapsNum(clapsNum + 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(ClappingIcon, {\n            didUserClappedOnPost: didUserClappedOnPost,\n            dataTestId: `postClappingIcon-${postId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"string\",\n          \"data-testid\": `postClapsNum-${postId}`,\n          children: clapsNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, postId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"h+L2bS3tcTuDOPLHg/nXf7na8+I=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["ListItem","ListItemButton","IconButton","Card","CardContent","CardActions","Typography","useState","useEffect","ClappingIcon","AddTagButton","Tag","jsxDEV","_jsxDEV","Post","_ref","_s","postId","postTitle","postContent","Tags","Posts","getPostClaps","addPostToTagList","handleAddTagClick","handleTagClick","handleClapClick","handleUserClapClick","selectedTagId","userId","getTagsByPostId","postID","tagsArr","tagName","push","tagsNameArr","isTag","length","didUserClappedOnPost","clapsNum","setClapsNum","alignItems","className","children","disableGutters","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","dataTestId","onClick","e","map","size","_c","$RefreshReg$"],"sources":["D:/Documents/CS projects/wix-enter-exam/client/src/components/Post.js"],"sourcesContent":["import {\n  ListItem,\n  ListItemButton,\n  IconButton,\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n} from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport ClappingIcon from './assets/ClappingIcon';\nimport AddTagButton from './AddTagButton';\nimport Tag from './Tag';\n\nfunction Post({\n  postId,\n  postTitle,\n  postContent,\n  Tags,\n  Posts,\n  getPostClaps,\n  addPostToTagList,\n  handleAddTagClick,\n  handleTagClick,\n  handleClapClick,\n  handleUserClapClick,\n  selectedTagId,\n  userId,\n}) {\n  const getTagsByPostId = (postID) => {\n    const tagsArr = [];\n    for (const tagName in Tags) {\n      if (Tags[tagName][postID]) {\n        tagsArr.push(tagName);\n      }\n    }\n    return tagsArr;\n  };\n\n  const tagsNameArr = getTagsByPostId(postId);\n  const isTag = tagsNameArr.length > 0 ? true : false;\n  let didUserClappedOnPost = false;\n\n  const [clapsNum, setClapsNum] = useState(0);\n    \n  return (\n    <ListItem\n      alignItems='flex-start'\n      key={postId}\n      className='post'\n      data-testid={`post-${postId}`}\n    >\n      <Card className='post'>\n        <ListItemButton disableGutters>\n          <CardContent>\n            <Typography\n              variant='h5'\n              gutterBottom\n              data-testid={`postTitle-${postId}`}\n            >\n              {postTitle}\n            </Typography>\n            <Typography\n              variant='body1'\n              gutterBottom\n              data-testid={`postContent-${postId}`}\n            >\n              {postContent}\n            </Typography>\n          </CardContent>\n        </ListItemButton>\n        <CardActions>\n          <AddTagButton\n            dataTestId={`postAddTagBtn-${postId}`}\n            onClick={(e) => {\n              handleAddTagClick(e, postId);\n            }\n          }\n          />\n          {isTag &&\n            tagsNameArr.map((tagName) => (\n              <Tag\n                tagName={tagName}\n                postId={postId}\n                handleTagClick={handleTagClick}\n                addPostToTagList={addPostToTagList}\n                selectedTagId={selectedTagId}\n              />\n            ))}\n          <IconButton\n            aria-label='clapping'\n            size='small'\n            data-testid={`postClapsBtn-${postId}`}\n            onClick={() => {\n                handleUserClapClick(userId, postId);\n                handleClapClick(postId, userId);\n                setClapsNum(clapsNum + 1);\n              }}\n            >\n            <ClappingIcon\n              didUserClappedOnPost={didUserClappedOnPost}\n              dataTestId={`postClappingIcon-${postId}`}\n            />\n          </IconButton>\n          <Typography variant='string' data-testid={`postClapsNum-${postId}`}>\n            {clapsNum}\n          </Typography>\n        </CardActions>\n      </Card>\n    </ListItem>\n  );\n}\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}