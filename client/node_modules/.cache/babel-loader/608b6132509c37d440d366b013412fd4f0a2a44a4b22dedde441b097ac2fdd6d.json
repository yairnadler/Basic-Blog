{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\CS projects\\\\wix-enter-exam\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport './App.css';\nimport Home from './pages/Home';\nimport AddNewPost from './pages/AddNewPost';\nimport MyClaps from './pages/MyClaps';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { Typography, AppBar, Toolbar, Button, ButtonGroup, Alert, Snackbar } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport HomeIcon from '@mui/icons-material/Home';\nimport FloatingMenu from './components/FloatingMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const baseURL = 'http://localhost:3080';\n  const popularityOptions = [1, 5, 20, 100];\n  const [userId, setUserId] = useState('');\n  const [selectedPopularityQuery, setSelectedPopularityQuery] = useState('');\n  const [selectedTagQuery, setSelectedTagQuery] = useState('');\n  const [allPosts, setAllPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [claps, setClaps] = useState(0);\n  const [clapsList, setClapsList] = useState([]);\n  const [tags, setTags] = useState({});\n  const [tagsList, setTagsList] = useState([]);\n  const [selectedTagId, setSelectedTagId] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [alertMsg, setAlertMsg] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertType, setAlertType] = useState('');\n  useEffect(() => {\n    if (showAlert) {\n      setTimeout(() => {\n        handleAlert('', false, '');\n      }, 1500);\n    }\n  }, [showAlert]);\n  const handleAlert = (message, isShow, type) => {\n    setAlertMsg(message);\n    setShowAlert(isShow);\n    setAlertType(type);\n  };\n\n  ///////////////////////////////////// data request /////////////////////////////////////\n  axios.defaults.withCredentials = true;\n  ///////////////////// get request /////////////////////\n\n  // sets a userId cookie\n  const getUser = useCallback(() => {\n    axios.get(`${baseURL}/user`).then(response => {\n      setUserId(response.data.id);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  }, []);\n\n  // get all posts\n  const getPosts = useCallback(() => {\n    axios.get(`${baseURL}/posts`).then(response => {\n      setAllPosts([...response.data['Posts']]);\n      setFilteredPosts([...response.data['Posts']]);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  }, []);\n\n  // get filtered posts\n  const getFilteredPosts = (popularity, tagName) => {\n    const url = popularity !== '' ? `popularity=${popularity}` : `tag=${tagName}`;\n    axios.get(`${baseURL}/posts?${url}`).then(response => {\n      setFilteredPosts([...response.data['Posts']]);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // get all tags\n  const getTags = useCallback(() => {\n    axios.get(`${baseURL}/tags`).then(response => {\n      setTags({\n        ...response.data['Tags']\n      });\n      const tagsList = [];\n      for (const tagName in response.data['Tags']) {\n        tagsList.push(tagName);\n      }\n      setTagsList(tagsList);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  }, []);\n\n  // get post's claps\n  const getPostClaps = useCallback(postId => {\n    axios.get(`${baseURL}/posts/${postId}/claps`).then(response => {\n      setClaps(response.data.claps);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  }, []);\n\n  // get the number of claps of the user\n  const getClaps = useCallback(() => {\n    axios.get(`${baseURL}/claps`).then(response => {\n      setClaps({\n        ...response.data['Claps']\n      });\n      const clapsList = [];\n      for (const clap in response.data['Claps']) {\n        clapsList.push(clap);\n      }\n      setClaps(clapsList);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  }, []);\n  useEffect(() => {\n    getPosts();\n    getTags();\n    getUser();\n    getClaps();\n  }, [getPosts, getTags, getUser, getClaps]);\n\n  ///////////////////// post request /////////////////////\n  // add a post\n  const addPost = (title, content, tagName) => {\n    axios.post(`${baseURL}/posts`, {\n      title,\n      content,\n      tagName\n    }, {\n      headers: {\n        // to send a request with a body as json you need to use this 'content-type'\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => {\n      const newPost = response.data['Post'];\n      setAllPosts([...allPosts, newPost]);\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // add a tag\n  const addNewTag = tagName => {\n    axios.post(`${baseURL}/tags`, {\n      tagName\n    }, {\n      headers: {\n        // to send a request with a body as json you need to use this 'content-type'\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(response => {\n      setTags({\n        ...response.data['Tags']\n      });\n      const tagsList = [];\n      for (const tagName in response.data['Tags']) {\n        tagsList.push(tagName);\n      }\n      setTagsList(tagsList);\n      handleAlert('Tag was added successfully', true, 'success');\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // add tag to a post\n  const addTagToPost = (tagName, postId) => {\n    axios.post(`${baseURL}/posts/${postId}/tags`, {\n      tagName,\n      postId\n    }, {\n      headers: {\n        // to send a request with a body as json you need to use this 'content-type'\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // add post to the list of tags according to the tags it has\n  const addPostToTagList = (tagName, postId) => {\n    axios.post(`${baseURL}/tags/tagName/${tagName}`, {\n      tagName,\n      postId\n    }, {\n      headers: {\n        // to send a request with a body as json you need to use this 'content-type'\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // action to do when clap icon is clicked\n  const handleClapClick = (postId, userId) => {\n    console.log(userId);\n    axios.post(`${baseURL}/posts/${postId}`, {\n      postId,\n      userId\n    }, {\n      headers: {\n        // to send a request with a body as json you need to use this 'content-type'\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // action to do when clap is clicked with regard to the user that clapped\n  const handleUserClapClick = (userId, postId) => {\n    axios.post(`${baseURL}/claps`, {\n      userId,\n      postId\n    }, {\n      headers: {\n        // to send a request with a body as json you need to use this 'content-type'\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).catch(error => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  ///////////////////////////////////// handle click events /////////////////////////////////////\n  const handlePopularityClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = selectedOption => {\n    setAnchorEl(null);\n    filterPostsByPopularity(selectedOption);\n  };\n  const handleHomeClick = () => {\n    setFilteredPosts(allPosts);\n  };\n  const handleTagClick = tagName => {\n    filterPostsByTag(tagName);\n  };\n\n  ///////////////////////////////////// filters /////////////////////////////////////\n  const filterPostsByPopularity = minClapsNum => {\n    setSelectedPopularityQuery(`${minClapsNum}`);\n    getFilteredPosts(minClapsNum, selectedTagQuery);\n  };\n  const filterPostsByTag = tagName => {\n    setSelectedTagQuery(`${tagName}`);\n    getFilteredPosts(selectedPopularityQuery, tagName);\n  };\n\n  ///////////////////////////////////// render components /////////////////////////////////////\n  const renderToolBar = () => {\n    return /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n          variant: \"text\",\n          \"aria-label\": \"text button group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/\",\n            size: \"large\",\n            onClick: handleHomeClick,\n            startIcon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 26\n            }, this),\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-new-post\",\n            size: \"large\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 26\n            }, this),\n            children: \"Add A New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            href: \"/my-claps\",\n            size: \"large\",\n            \"data-testid\": \"myClapsBtn\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 26\n            }, this),\n            children: \"My Claps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Enter 2023 Blog Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          variant: \"text\",\n          \"aria-label\": \"text button group\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            startIcon: /*#__PURE__*/_jsxDEV(FilterAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 26\n            }, this),\n            onClick: e => handlePopularityClick(e),\n            \"data-testid\": \"popularityBtn\",\n            className: window.location.href !== 'http://localhost:3000/add-new-post' ? '' : 'visibilityHidden',\n            children: \"filter by Popularity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FloatingMenu, {\n          menuOptions: popularityOptions,\n          anchorElement: anchorEl,\n          handleMenuClose: handleMenuClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [renderToolBar(), showAlert && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: true,\n      \"data-testid\": \"alert-snackbar\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: alertType,\n        \"data-testid\": \"alert\",\n        children: alertMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-new-post\",\n          element: /*#__PURE__*/_jsxDEV(AddNewPost, {\n            handleAddPost: addPost,\n            tagsList: tagsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            Posts: filteredPosts,\n            Tags: tags,\n            tagsList: tagsList,\n            Claps: claps,\n            clapsList: clapsList,\n            getPostClaps: getPostClaps,\n            addTagToPost: addTagToPost,\n            addPostToTagList: addPostToTagList,\n            handleTagClick: handleTagClick,\n            handleAddNewTag: addNewTag,\n            selectedTagId: selectedTagId,\n            selectedPopularityQuery: selectedPopularityQuery,\n            selectedTagQuery: selectedTagQuery,\n            handleUserClapClick: handleUserClapClick,\n            handleClapClick: handleClapClick,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/my-claps\",\n          element: /*#__PURE__*/_jsxDEV(MyClaps, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z+gljSlIWWbhqZLbSsFJnts4TLc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","Home","AddNewPost","MyClaps","BrowserRouter","Router","Routes","Route","useState","useEffect","useCallback","Typography","AppBar","Toolbar","Button","ButtonGroup","Alert","Snackbar","AddCircleIcon","FilterAltIcon","HomeIcon","FloatingMenu","jsxDEV","_jsxDEV","App","_s","baseURL","popularityOptions","userId","setUserId","selectedPopularityQuery","setSelectedPopularityQuery","selectedTagQuery","setSelectedTagQuery","allPosts","setAllPosts","filteredPosts","setFilteredPosts","claps","setClaps","clapsList","setClapsList","tags","setTags","tagsList","setTagsList","selectedTagId","setSelectedTagId","anchorEl","setAnchorEl","alertMsg","setAlertMsg","showAlert","setShowAlert","alertType","setAlertType","setTimeout","handleAlert","message","isShow","type","defaults","withCredentials","getUser","get","then","response","data","id","catch","error","getPosts","getFilteredPosts","popularity","tagName","url","getTags","push","getPostClaps","postId","getClaps","clap","addPost","title","content","post","headers","newPost","addNewTag","addTagToPost","addPostToTagList","handleClapClick","console","log","handleUserClapClick","handlePopularityClick","event","currentTarget","handleMenuClose","selectedOption","filterPostsByPopularity","handleHomeClick","handleTagClick","filterPostsByTag","minClapsNum","renderToolBar","position","color","children","variant","href","size","onClick","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","component","sx","flexGrow","e","className","window","location","menuOptions","anchorElement","open","severity","path","element","handleAddPost","Posts","Tags","Claps","handleAddNewTag","_c","$RefreshReg$"],"sources":["D:/Documents/CS projects/wix-enter-exam/client/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport './App.css';\nimport Home from './pages/Home';\nimport AddNewPost from './pages/AddNewPost';\nimport MyClaps from './pages/MyClaps';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  Typography,\n  AppBar,\n  Toolbar,\n  Button,\n  ButtonGroup,\n  Alert,\n  Snackbar,\n} from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport HomeIcon from '@mui/icons-material/Home';\nimport FloatingMenu from './components/FloatingMenu';\n\nfunction App() {\n  const baseURL = 'http://localhost:3080';\n  const popularityOptions = [1, 5, 20, 100];\n\n  const [userId, setUserId] = useState('');\n\n  const [selectedPopularityQuery, setSelectedPopularityQuery] = useState('');\n  const [selectedTagQuery, setSelectedTagQuery] = useState('');\n\n  const [allPosts, setAllPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n    \n  const [claps, setClaps] = useState(0);\n  const [clapsList, setClapsList] = useState([]);\n\n  const [tags, setTags] = useState({});\n  const [tagsList, setTagsList] = useState([]);\n  const [selectedTagId, setSelectedTagId] = useState('');\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [alertMsg, setAlertMsg] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertType, setAlertType] = useState('');\n\n  useEffect(() => {\n    if (showAlert) {\n      setTimeout(() => {\n        handleAlert('', false, '');\n      }, 1500);\n    }\n  }, [showAlert]);\n\n  const handleAlert = (message, isShow, type) => {\n    setAlertMsg(message);\n    setShowAlert(isShow);\n    setAlertType(type);\n  };\n\n  ///////////////////////////////////// data request /////////////////////////////////////\n  axios.defaults.withCredentials = true;\n  ///////////////////// get request /////////////////////\n\n  // sets a userId cookie\n  const getUser = useCallback(() => {\n    axios\n      .get(`${baseURL}/user`)\n      .then((response) => {\n        setUserId(response.data.id);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  }, []);\n\n  // get all posts\n  const getPosts = useCallback(() => {\n    axios\n      .get(`${baseURL}/posts`)\n      .then((response) => {\n        setAllPosts([...response.data['Posts']]);\n        setFilteredPosts([...response.data['Posts']]);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  }, []);\n\n  // get filtered posts\n  const getFilteredPosts = (popularity, tagName) => {\n    const url = popularity !== '' ? `popularity=${popularity}` : `tag=${tagName}`;\n    axios\n      .get(`${baseURL}/posts?${url}`)\n      .then((response) => {\n        setFilteredPosts([...response.data['Posts']]);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  };\n\n  // get all tags\n  const getTags = useCallback(() => {\n    axios\n      .get(`${baseURL}/tags`)\n      .then((response) => {\n        setTags({ ...response.data['Tags'] });\n        const tagsList = [];\n        for (const tagName in response.data['Tags']) {\n          tagsList.push(tagName);\n        }\n        setTagsList(tagsList);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  }, []);\n\n  // get post's claps\n  const getPostClaps = useCallback((postId) => {\n    axios\n      .get(`${baseURL}/posts/${postId}/claps`)\n      .then((response) => {\n        setClaps(response.data.claps);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  }, []);\n\n  // get the number of claps of the user\n  const getClaps = useCallback(() => {\n    axios\n      .get(`${baseURL}/claps`)\n      .then((response) => {\n        setClaps({ ...response.data['Claps'] });\n        const clapsList = [];\n        for (const clap in response.data['Claps']) {\n          clapsList.push(clap);\n        }\n        setClaps(clapsList);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  }, []);      \n\n  useEffect(() => {\n    getPosts();\n    getTags();\n    getUser();\n    getClaps();\n  }, [getPosts, getTags, getUser, getClaps]);\n\n  ///////////////////// post request /////////////////////\n  // add a post\n  const addPost = (title, content, tagName) => {\n    axios\n      .post(\n        `${baseURL}/posts`,\n        {\n            title,\n            content,\n            tagName,\n        },\n        {\n          headers: {\n            // to send a request with a body as json you need to use this 'content-type'\n            'content-type': 'application/x-www-form-urlencoded',\n          },\n        }\n      )\n      .then((response) => {\n        const newPost = response.data['Post'];\n        setAllPosts([...allPosts, newPost]);\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      }\n      );\n  };\n\n  // add a tag\n  const addNewTag = (tagName) => {\n    axios\n      .post(`${baseURL}/tags`,\n      {\n        tagName\n      },\n      {\n        headers: {\n          // to send a request with a body as json you need to use this 'content-type'\n          'content-type': 'application/x-www-form-urlencoded',\n          }\n      })\n      .then((response) => {\n        setTags({ ...response.data['Tags'] });\n        const tagsList = [];\n        for (const tagName in response.data['Tags']) {\n          tagsList.push(tagName);\n        }\n        setTagsList(tagsList);\n        handleAlert('Tag was added successfully', true, 'success');\n      })\n      .catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  };\n\n  // add tag to a post\n  const addTagToPost = (tagName, postId) => {\n    axios\n      .post\n      (\n        `${baseURL}/posts/${postId}/tags`,\n        {\n          tagName,\n          postId\n        },\n        {\n          headers: {\n            // to send a request with a body as json you need to use this 'content-type'\n            'content-type': 'application/x-www-form-urlencoded',\n          },\n        }\n      ).catch((error) => {\n        handleAlert(error.message, true, 'error');\n      });\n  };\n  \n  // add post to the list of tags according to the tags it has\n  const addPostToTagList = (tagName, postId) => {\n    axios\n    .post\n    (\n      `${baseURL}/tags/tagName/${tagName}`,\n      {\n        tagName,\n        postId\n      },\n      {\n        headers: {\n          // to send a request with a body as json you need to use this 'content-type'\n          'content-type': 'application/x-www-form-urlencoded',\n        },\n      }\n    ).catch((error) => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  // action to do when clap icon is clicked\n  const handleClapClick = (postId, userId) => {\n    console.log(userId);\n    axios\n    .post(\n      `${baseURL}/posts/${postId}`,{\n        postId,\n        userId\n      },\n      {\n        headers: {\n          // to send a request with a body as json you need to use this 'content-type'\n          'content-type': 'application/x-www-form-urlencoded',\n        },\n      }\n    )\n    .catch((error) => {\n      handleAlert(error.message, true, 'error');\n    });        \n}; \n\n// action to do when clap is clicked with regard to the user that clapped\nconst handleUserClapClick = (userId, postId) => {\n  axios\n    .post(\n      `${baseURL}/claps`,\n      {\n        userId,\n        postId\n      },\n      {\n        headers: {\n          // to send a request with a body as json you need to use this 'content-type'\n          'content-type': 'application/x-www-form-urlencoded',\n        },\n      })\n    .catch((error) => {\n      handleAlert(error.message, true, 'error');\n    });\n  };\n\n  ///////////////////////////////////// handle click events /////////////////////////////////////\n  const handlePopularityClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = (selectedOption) => {\n    setAnchorEl(null);\n    filterPostsByPopularity(selectedOption);\n  };\n\n  const handleHomeClick = () => {\n    setFilteredPosts(allPosts);\n  };\n\n  const handleTagClick = (tagName) => {\n    filterPostsByTag(tagName);\n  };\n\n  ///////////////////////////////////// filters /////////////////////////////////////\n  const filterPostsByPopularity = (minClapsNum) => {\n    setSelectedPopularityQuery(`${minClapsNum}`);\n    getFilteredPosts(minClapsNum, selectedTagQuery);\n  };\n\n  const filterPostsByTag = (tagName) => {\n    setSelectedTagQuery(`${tagName}`);\n    getFilteredPosts(selectedPopularityQuery, tagName);\n  };\n\n  ///////////////////////////////////// render components /////////////////////////////////////\n  const renderToolBar = () => {\n    return (\n      <AppBar position='sticky' color='inherit'>\n        <Toolbar>\n          <ButtonGroup variant='text' aria-label='text button group'>\n            <Button\n              href='/'\n              size='large'\n              onClick={handleHomeClick}\n              startIcon={<HomeIcon />}\n            >\n              Home\n            </Button>\n            <Button\n              href='/add-new-post'\n              size='large'\n              startIcon={<AddCircleIcon />}\n            >\n              Add A New Post\n            </Button>\n            <Button\n              href='/my-claps'\n              size='large'\n              data-testid='myClapsBtn'\n              startIcon={<AddCircleIcon />}\n            >\n              My Claps\n            </Button>\n          </ButtonGroup>\n          <Typography variant='h6' component='div' sx={{ flexGrow: 1 }}>\n            Enter 2023 Blog Exam\n          </Typography>\n          <ButtonGroup variant='text' aria-label='text button group'>\n            <Button\n              size='large'\n              startIcon={<FilterAltIcon />}\n              onClick={(e) => handlePopularityClick(e)}\n              data-testid='popularityBtn'\n              className={\n                window.location.href !== 'http://localhost:3000/add-new-post'\n                  ? ''\n                  : 'visibilityHidden'\n              }\n            >\n              filter by Popularity\n            </Button>\n          </ButtonGroup>\n          <FloatingMenu\n            menuOptions={popularityOptions}\n            anchorElement={anchorEl}\n            handleMenuClose={handleMenuClose}\n          />\n        </Toolbar>\n      </AppBar>\n    );\n  };\n\n  return (\n    <div className='App'>\n      {renderToolBar()}\n      {showAlert && (\n        <Snackbar open={true} data-testid='alert-snackbar'>\n          <Alert severity={alertType} data-testid='alert'>\n            {alertMsg}\n          </Alert>\n        </Snackbar>\n      )}\n      <Router>\n        <Routes>\n          <Route\n            path='/add-new-post'\n            element=\n              {<AddNewPost \n                handleAddPost={addPost}\n                tagsList={tagsList}\n              />\n          }\n          />\n          <Route\n            path='/'\n            element={\n              <Home\n                Posts={filteredPosts}\n                Tags={tags}\n                tagsList={tagsList}\n                Claps={claps}\n                clapsList={clapsList}\n                getPostClaps={getPostClaps}\n                addTagToPost={addTagToPost}\n                addPostToTagList={addPostToTagList}\n                handleTagClick={handleTagClick}\n                handleAddNewTag={addNewTag}\n                selectedTagId={selectedTagId}\n                selectedPopularityQuery={selectedPopularityQuery}\n                selectedTagQuery={selectedTagQuery}\n                handleUserClapClick={handleUserClapClick}\n                handleClapClick={handleClapClick}\n                userId={userId}\n              />\n            }\n          />\n          <Route\n            path='/my-claps'\n            element={\n              <MyClaps/>\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}